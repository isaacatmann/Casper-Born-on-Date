<?xml version="1.0" encoding="UTF-8"?><extensionAttribute>
<displayName>Born on Date</displayName>
<description>Guess the date manufactured based off the serial number.  Works with both 11 digit and 12 digit serial numbers.  This is accurate down to the manufacture week but does not guarantee or imply any warranty. </description>
<dataType>date</dataType>
<scriptContentsMac>#!/bin/bash&#13;
&#13;
# Created by Zach Gottesman, Isaac Ordonez&#13;
# Mann Consulting (2018-05-01)&#13;
# For more information email support@mann.com or visit http://mann.com&#13;
&#13;
&#13;
if [[ $# -gt '0' ]]; then&#13;
  serialNumber="$1"&#13;
else&#13;
  serialNumber=$(system_profiler SPHardwareDataType | grep 'Serial Number (system)' | awk '{print $NF}')&#13;
fi&#13;
&#13;
if [ "${#serialNumber}" == 11 ]; then&#13;
  #old serialNumber number style&#13;
  year=${serialNumber:2:1}&#13;
  intYear=$((year+2000))&#13;
  intWeek=${serialNumber:3:2}&#13;
elif [ "${#serialNumber}" == 12 ]; then&#13;
  # New serial number number style&#13;
  yearValues=( C D F G H J K L M N P Q R S T V W X Y Z )&#13;
  weekValues=( 1 2 3 4 5 6 7 8 9 C D F G H J K L M N P Q R T V W X Y )&#13;
  year=${serialNumber:3:1}&#13;
  week=${serialNumber:4:1}&#13;
  intYear=0&#13;
  intWeek=0&#13;
  for i in "${!yearValues[@]}"&#13;
    do&#13;
      if [ "${yearValues[i]}" == "$year" ]; then&#13;
        intYear=$(((i / 2) + 2010))&#13;
        intYearHalf=$i&#13;
      fi&#13;
  done&#13;
  for i in "${!weekValues[@]}"&#13;
    do&#13;
      if [ "${weekValues[i]}" == "$week" ]; then&#13;
        intWeek=$i&#13;
      fi&#13;
  done&#13;
  if [ "$((intYearHalf % 2))" != 0 ]; then&#13;
    intWeek=$((intWeek+27))&#13;
  fi&#13;
else&#13;
  printf "&lt;result&gt;Invalid SN&lt;/result&gt;"&#13;
fi&#13;
&#13;
#use $intYear and $intWeek to make a date string (and display)&#13;
########################################################################################################&#13;
## move to                     #                       #                   # move to #                 #&#13;
##Thu Jan  1 16:00:00 PST 1970 # move to selected year # move to week      # monday  # format properly #&#13;
&#13;
result=$(date -v-$(($(date +%s)))S -v+1d -v+$((intYear - 1970))y -v+$((intWeek - 1))w -v-mon "+%Y-%m-%d")&#13;
&#13;
if [ ! -z "$result" ]; then&#13;
  printf "&lt;result&gt;%s&lt;/result&gt;" "$result"&#13;
else&#13;
  printf "&lt;result&gt;none&lt;/result&gt;"&#13;
fi&#13;
</scriptContentsMac>
<scriptContentsWindows/>
</extensionAttribute>
